# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD for AMT project.

stages:
  - build
  - test
  - deploy

variables:
  RULES_CHANGES_PATH: "**/*"

.base-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - $RULES_CHANGES_PATH
    - when: manual
      allow_failure: true

.ObjectManager:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "ObjectManager/**/*"

.LabelDetector:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "LabelDetector/**/*"

ObjectManager-build:
  stage: build
  extends: .ObjectManager
  needs: []
  script:
    - docker build -t test_object_manager --build-arg aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }} ./ObjectManager
    
ObjectManager-test:
  stage: test
  extends: .ObjectManager
  needs: ["ObjectManager-build"]
  script:
    - docker run -p 9090:9090 test_object_manager

LabelDetector-build:
  stage: build
  extends: .LabelDetector
  needs: []
  script:
    - docker build -t test_label_detector --build-arg aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }} ./LabelDetector
    
LabelDetector-test:
  stage: test
  extends: .LabelDetector
  needs: ["LabelDetector-build"]
  script:
    - docker run -p 9090:9090 test_label_detector

# on:
#   push:
#     branches: [ "develop" ]
#   pull_request:
#     branches: [ "develop" ]

# jobs:
#   build:
#     environment: CI-AWS
#     env:
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 18
#       uses: actions/setup-java@v3
#       with:
#         java-version: '18'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml

#     # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
